attr(education)
library(readr)
library(readxl)
library(dplyr)
library(tidyr)
library(knitr)
library(mlr)
education <- read_excel("allVic_education.xls", skip = 8, col_names = TRUE)
kable(head(education))
geo_lookup <- read_csv("SA1_LGA_LookUp.csv")
kable(head(geo_lookup))
attr(education)
attr(education, "class")
attr(education, "names")
attributes(education)
#Education Levels
kable(head(education)) #First column and first rows contain no data and need to be trimmed.
kable(tail(education)) #Extra rows at bottom of the data frame with no data, need to be trimmed.
dim(education) #14 columns and 14,081 rows
str(education) #One logical class column with no data. One character column with no header (X__1), will need to be renamed to SA1 and set to numeric so this dataset can be joined to others. The other 12 columns are numeric, containing counts of people with varying levels of educational qualifications in each statistical area.
names(education) #X__1 will need to be changed to SA1. The other headers are varying levels of education qualifications, making this data a good candidate for gathering into a single column as they all pertain to the same type of information.
class(education) #Class of object is a data frame as expected.
#Geographical Data
kable(head(geo_lookup)) #No extra columns or rows to trim.
kable(tail(geo_lookup)) #No extra columns or rows to trim. A few missing values are visible.
dim(geo_lookup) #3 columns and 14,382 rows - more rows than the education data. Will consider this when choosing the type of join to use.
str(geo_lookup) #First column is SA1 values which are integers. Second column is LGA names which are characters. The third column has Metropolitan Melbourne Areas which are also characters.
names(geo_lookup) #Names can be more neatly given for the SA1 and LGA variables.
class(geo_lookup) #Class is data frame, as expected.
names(education) #X__1 will need to be changed to SA1. The other headers are varying levels of education qualifications, making this data a good candidate for gathering into a single column as they all pertain to the same type of information.
kable(head(education)) #First column and first rows contain no data and need to be trimmed.
kable(tail(education)) #Extra rows at bottom of the data frame with no data, need to be trimmed.
#Education Data
education <- education[-1,-1] #Removing first row and column
colnames(education)[1] <- "SA1" #The first column has no header. Setting column header to SA1.
totalrow <- which(education$SA1 == 'Total') #Add a totals row at the bottom of the data frame.
education <- education[1:totalrow - 1,] #Removing empty rows at end of data frame.
tail(education)
names(education) #X__1 will need to be changed to SA1. The other headers are varying levels of education qualifications, making this data a good candidate for gathering into a single column as they all pertain to the same type of information.
